
steps:
  # this is in place of automated smoke test
  - block: "I Have Run A Smoke Test Using The Inputs-Output.Cue Artifact From Merge To Main Build (Under Promote Artifacts To Staging)"
    key: tag-block
  ##############################################
  # Create and validate release inputs.cue 
  ##############################################
  
  - group: ":scroll: Update And Validate Inputs.Cue For Release"
    key: update-and-validate-inputs-cue-tag
    depends_on:
      - tag-block
    steps:
      - label: ":scroll: Update Inputs.Cue On Tag"
        key: update-inputs-cue-tag
        env:
          GENERIC_DEST: "generic"
          OCI_SRC: "dev-oci"
          OCI_DEST: "oci"
        command: 
        - set -e
        - ./scripts/promotion.py generate inputs
        - buildkite-agent artifact upload generated_inputs.cue
        agents:
          queue: k8s-agent
        plugins:
        - greymatter-io/k8s:
            secret-name: build-secrets
            agent-token-ssh-secret-key: buildkite-agent-token
            git-ssh-secret-key: ssh-key
            image-pull-secret: agent-pull-secret

            image: greymatter.jfrog.io/pipeline-oci/greymatter-core-ci:v1
            always-pull: true
            mount-secret: build-secrets:/secrets

      - label: ":heavy_check_mark: Validate Generated Inputs.cue"
        key: validate-generated-inputs-cue
        depends_on:
          - update-inputs-cue-tag
        env:
          - DEST_OCI_CI: "oci"
        commands:
          - set -e
          - buildkite-agent artifact download generated_inputs.cue . --step update-inputs-cue-tag
          - mv generated_inputs.cue inputs.cue
          - ./scripts/validate-generated-inputs-cue
        agents:
          queue: k8s-agent
        plugins:
        - greymatter-io/k8s:
            secret-name: build-secrets
            agent-token-ssh-secret-key: buildkite-agent-token
            git-ssh-secret-key: ssh-key
            image-pull-secret: agent-pull-secret

            image: greymatter.jfrog.io/pipeline-oci/greymatter-core-ci:v1
            always-pull: true
            mount-secret: build-secrets:/secrets


  ##############################################
  # Validate generated manifests
  ##############################################
  - group: ":scroll: Update and validate generated manifests for release"
    key: update-and-validate-generated-manifests-tag
    depends_on:
      - tag-block
    steps:
      - label: ":scroll: Update Generated Manifests"
        key: update-generated-manifests
        depends_on:
          - generate-manifests
        commands: 
          - set -e
          - buildkite-agent artifact download generated-manifests/* . --build ${BUILDKITE_BUILD_ID} --step generate-manifests
          - find ./generated-manifests -type f -name 'operator*.yaml' -exec sed -i 's|greymatter.jfrog.io/internal-oci/|greymatter.jfrog.io/oci/|g' {} \;
          - buildkite-agent artifact upload "generated-manifests/*"
        agents:
          queue: k8s-agent
        plugins:
        - greymatter-io/k8s:
            secret-name: build-secrets
            agent-token-ssh-secret-key: buildkite-agent-token
            git-ssh-secret-key: ssh-key
            image-pull-secret: agent-pull-secret

            image: greymatter.jfrog.io/pipeline-oci/greymatter-core-ci:v1
            always-pull: true
            mount-secret: build-secrets:/secrets

      - label: ":heavy_check_mark: Validate Generated Manifests Use Correct Operator Image"
        key:
        depends_on:
          - update-generated-manifests
        env:
          - DEST_OCI_CI: "oci"
        commands:
          - set -e
          - buildkite-agent artifact download generated-manifests/* . --build ${BUILDKITE_BUILD_ID} --step update-generated-manifests
          - ./scripts/validate-generated-manifests
        soft_fail: true
        agents:
          queue: k8s-agent
        plugins:
        - greymatter-io/k8s:
            secret-name: build-secrets
            agent-token-ssh-secret-key: buildkite-agent-token
            git-ssh-secret-key: ssh-key
            image-pull-secret: agent-pull-secret

            image: greymatter.jfrog.io/pipeline-oci/greymatter-core-ci:v1
            always-pull: true
            mount-secret: build-secrets:/secrets

  ##############################################
  # Package and push core tarball to release
  ##############################################
  - label: ":package: :jfrog: Package And Publish Tarball Tag"
    key: package-tarball-tag
    depends_on:
      - tests
      - update-and-validate-inputs-cue-tag
      - update-and-validate-generated-manifests-tag
    env:
      JF_DEST_REGISTRY: generic
    commands:
      - set -e
      - jf config add --access-token=$(cat /secrets/jfrog-token) --url https://greymatter.jfrog.io --interactive=false
      - buildkite-agent artifact download generated_inputs.cue . --step update-inputs-cue-tag
      - mv generated_inputs.cue inputs.cue
      - buildkite-agent artifact download generated-manifests/* . --build ${BUILDKITE_BUILD_ID} --step update-generated-manifests
      - sleep 10
      - rm -rf /tmp/greymatter-core && mkdir /tmp/greymatter-core
      - tar --exclude-vcs --exclude=".buildkite" --exclude="CHANGELOG.md" --exclude="scripts/cibuild" --exclude="scripts/bootstrap" --exclude="scripts/update" --exclude="scripts/promotion" --exclude="scripts/promotion.py" --exclude="scripts/templates/greymatter-download-template" --exclude="greymatter-download-template.sh" -czf /tmp/greymatter-core/greymatter-core.tar.gz .
      - cp /tmp/greymatter-core/greymatter-core.tar.gz . && rm -r /tmp/greymatter-core
      - jf rt upload ./greymatter-core.tar.gz $$JF_DEST_REGISTRY/greymatter-core/greymatter-core_${BUILDKITE_TAG:1}_none_none.tar.gz
      - buildkite-agent artifact upload greymatter-core.tar.gz
    agents:
      queue: k8s-agent
    plugins:
    - greymatter-io/k8s:
        secret-name: build-secrets
        agent-token-ssh-secret-key: buildkite-agent-token
        git-ssh-secret-key: ssh-key
        image-pull-secret: agent-pull-secret

        image: greymatter.jfrog.io/pipeline-oci/greymatter-core-ci:v1
        always-pull: true
        mount-secret: build-secrets:/secrets
